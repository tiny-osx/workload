<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
    <PackageType>Template</PackageType>
    <PackageId>TinyOS.Templates</PackageId>
    <Title>TinyOS Templates</Title>
    <Description>Project templates for creating TinyOS projects.</Description>
    <PackageTags>dotnet-new;templates;template;tinyos</PackageTags>
    <TargetFramework>net8.0</TargetFramework>
    <NoBuild>true</NoBuild>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <IncludeContentInPack>true</IncludeContentInPack>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <EnableDefaultItems>false</EnableDefaultItems>
    <ContentTargetFolders>content</ContentTargetFolders>
    <GenerateDependencyFile>false</GenerateDependencyFile>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>
  </PropertyGroup>

	<ItemGroup>
		<PackageReference Remove="Microsoft.NETCore.App" />
    <Content Include="content/**" >
			<PackagePath>content\</PackagePath>
		</Content>
	</ItemGroup>

  <!--
  This target writes a global.json into content which ensures that all the
  sample projects will use the SDK package version we just built.
  -->
  <Target Name="_WriteGlobalJson" BeforeTargets="_GetPackageFiles">
      <PropertyGroup>
          <_GlobalJson>
              <![CDATA[
{
  "$schema": "https://json.schemastore.org/global.json",
  "sdk": {
    "version": "8.0.0",
    "rollForward": "latestMajor"
  },
  "msbuild-sdks": {
    "TinyOS.NET.Sdk": "$(PackageVersion)"
  }
}
              ]]>
          </_GlobalJson>
      </PropertyGroup>

      <WriteLinesToFile File="./Content/csharp/global.json"
                        Lines="$(_GlobalJson)"
                        Overwrite="true"
                        WriteOnlyWhenDifferent="true" />
  </Target>
	
</Project>
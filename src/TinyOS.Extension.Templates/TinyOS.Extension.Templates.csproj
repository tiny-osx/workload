<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<PackageType>Template</PackageType>
		<PackageId>TinyOS.Extension.Templates</PackageId>
		<Title>TinyOS Templates</Title>
		<Description>Project templates for creating TinyOS projects.</Description>
		<PackageTags>dotnet-new;templates;template;tinyos</PackageTags>
		<TargetFramework>netstandard2.0</TargetFramework>
		<IncludeContentInPack>true</IncludeContentInPack>
		<IncludeBuildOutput>false</IncludeBuildOutput>
		<ContentTargetFolders>content</ContentTargetFolders>
		<GenerateDependencyFile>false</GenerateDependencyFile>
		<NoBuild>true</NoBuild>
		<NoWarn>$(NoWarn)</NoWarn>
		<NoPackageAnalysis>true</NoPackageAnalysis>
		<SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>	
	</PropertyGroup>

  <PropertyGroup>
    <Version Condition=" '$(GlobalVersion)' == '' and '$(VersionSuffix)' != '' ">$(Version)-$(VersionSuffix)</Version>
  </PropertyGroup>

	<ItemGroup>
		<Content Include="Content/**/*" Exclude="**\bin\**;**\obj\**;$(MSBuildThisFile)" >
			<PackagePath>content\</PackagePath>
		</Content>
	</ItemGroup>

  <!--
  This target writes a global.json into content which ensures that all the
  sample projects will use the SDK package version we just built.
  -->
  <Target Name="_WriteGlobalJson"
          BeforeTargets="Pack">
      <PropertyGroup>
          <_GlobalJson>
              <![CDATA[
{
  "$schema": "https://json.schemastore.org/global.json",
  "sdk": {
    "version": "8.0.0",
    "rollForward": "latestMajor"
  },
  "msbuild-sdks": {
    "TinyOS.NET.Sdk": "$(GlobalVersion)"
  }
}
              ]]>
          </_GlobalJson>
      </PropertyGroup>

      <WriteLinesToFile File="./Content/tinyos.csharp/global.json"
                        Lines="$(_GlobalJson)"
                        Overwrite="true"
                        WriteOnlyWhenDifferent="true" />
  </Target>
	
</Project>